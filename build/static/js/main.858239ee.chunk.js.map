{"version":3,"sources":["containers/comic-list/actionTypes.js","containers/comic-details/actionTypes.js","lib/utils.js","images/logo.svg","containers/comic-list/reducers.js","containers/comic-details/reducers.js","containers/alert/reducers.js","containers/alert/actionTypes.js","store/reducers.js","containers/alert/actions.js","components/Alert/index.js","containers/comic-list/sagas/ComicListSaga.js","api/ApiConstants.js","api/index.js","containers/comic-list/sagas/index.js","containers/comic-details/sagas/ComicDetailsSaga.js","containers/comic-details/sagas/index.js","store/sagas.js","store/index.js","lib/i18n/index.js","config/translations/translations.js","containers/alert/containers/AlertContainer.js","containers/alert/containers/AlertView.js","components/Input/index.js","components/Search/index.js","config/images.js","components/Header/index.js","routes/index.js","App.js","index.js","components/ButtonIcon/index.js","containers/comic-list/actions.js","containers/comic-details/actions.js","components/Loader/index.js"],"names":["CLEAR_REDUCER","LOADING","ADD_COMICS","SAGA_COMIC_LIST","ADD_COMIC","SAGA_COMIC_DETAILS","getParamUrl","name","location","search","URLSearchParams","get","getClasses","classes","join","convertUriParamsToObject","urlParams","JSON","parse","decodeURI","replace","convertObjectToUriParams","params","str","p","hasOwnProperty","push","encodeURIComponent","module","exports","INITIAL_STATE","loadingView","comics","totalResults","totalPages","comicListReducer","createReducer","types","state","action","payload","loading","comic","comicDetailsReducer","alerts","alertReducer","concat","alert","alertList","forEach","id","addAlert","title","type","timeout","Date","getTime","alertTypes","Alert","remove","setTimeout","data-testid","className","ButtonIcon","testid","onClick","icon","color","size","getComicList","api","t","page","limit","put","comicListActions","call","response","ok","data","results","total","Math","ceil","alertActions","ApiConstants","auth","hash","apikey","ts","uri","apis","getAuthentication","removeEmptyProperties","obj","Object","keys","key","baseURL","apisauce","create","headers","offset","formatType","getComicDetails","Api","comicListSagas","takeLatest","comicDetailsActions","comicDetailsSagas","rootSaga","all","config","storage","blacklist","middleware","sagaMiddleware","createSagaMiddleware","reducers","persistCombineReducers","rootReducers","enhancers","applyMiddleware","persistConfig","store","createStore","compose","persistor","persistStore","run","sagas","configureStore","resources","en","translation","Marvel","Description","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","AlertContainer","props","clearReducer","this","deleteAlert","map","Component","connect","dispatch","Input","onChange","value","placeholder","required","disabled","e","target","defaultProps","withTranslation","onChangeValue","onSubmit","event","preventDefault","text","images","logo","require","HeaderView","searchComic","history","to","setState","src","alt","routes","path","exact","component","lazy","Routes","fallback","Loader","show","Header","route","App","ReactDOM","render","StrictMode","document","getElementById","style","width","height","backgroundColor","addComics","sagaComicList","addComic","sagaComicDetails"],"mappings":"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","file":"static/js/main.858239ee.chunk.js","sourcesContent":["export const CLEAR_REDUCER = 'CLEAR_REDUCER_COMIC_LIST';\nexport const LOADING = 'LOADING_COMIC_LIST';\nexport const ADD_COMICS = 'ADD_COMICS';\nexport const SAGA_COMIC_LIST = 'SAGA_COMIC_LIST';\n","export const CLEAR_REDUCER = 'CLEAR_REDUCER_COMIC_DETAILS';\nexport const LOADING = 'LOADING_COMIC_DETAILS';\nexport const ADD_COMIC = 'ADD_COMIC';\nexport const SAGA_COMIC_DETAILS = 'SAGA_COMIC_DETAILS';\n","/* eslint-disable no-prototype-builtins */\n/* eslint-disable no-restricted-syntax */\nexport const getParamUrl = (name, location) => {\n  const { search } = location;\n  const params = new URLSearchParams(search);\n\n  return params.get(name) || '';\n};\n\nexport const getClasses = (classes) => classes.join(' ');\n\nexport const convertUriParamsToObject = (urlParams) => (urlParams ? (\n  JSON.parse(`{\"${decodeURI(urlParams).replace('?', '').replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"')}\"}`)\n) : {});\n\nexport const convertObjectToUriParams = (params) => {\n  const str = [];\n  for (const p in params) {\n    if (params.hasOwnProperty(p)) {\n      str.push(`${encodeURIComponent(p)}=${encodeURIComponent(params[p])}`);\n    }\n  }\n  return `?${str.join('&')}`;\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.91d7f614.svg\";","import { createReducer } from 'reduxsauce';\nimport * as types from './actionTypes';\n\nconst INITIAL_STATE = {\n  loadingView: false,\n  comics: [],\n  totalResults: 0,\n  totalPages: 0,\n};\n\nconst clearReducer = () => ({ ...INITIAL_STATE });\n\nconst loading = (state = INITIAL_STATE, action) => ({\n  ...state,\n  loadingView: action.payload.loading,\n});\n\nconst addComics = (state = INITIAL_STATE, action) => ({\n  ...state,\n  comics: action.payload.comics,\n  totalResults: action.payload.totalResults,\n  totalPages: action.payload.totalPages,\n});\n\nexport const comicListReducer = createReducer(INITIAL_STATE, {\n  [types.CLEAR_REDUCER]: clearReducer,\n  [types.LOADING]: loading,\n  [types.ADD_COMICS]: addComics,\n});\n","import { createReducer } from 'reduxsauce';\nimport * as types from './actionTypes';\n\nconst INITIAL_STATE = {\n  loadingView: false,\n  comic: {},\n};\n\nconst clearReducer = () => ({ ...INITIAL_STATE });\n\nconst loading = (state = INITIAL_STATE, action) => ({\n  ...state,\n  loadingView: action.payload.loading,\n});\n\nconst addComic = (state = INITIAL_STATE, action) => ({\n  ...state,\n  comic: action.payload.comic,\n});\n\nexport const comicDetailsReducer = createReducer(INITIAL_STATE, {\n  [types.CLEAR_REDUCER]: clearReducer,\n  [types.LOADING]: loading,\n  [types.ADD_COMIC]: addComic,\n});\n","import { createReducer } from 'reduxsauce';\nimport * as types from './actionTypes';\n\nconst INITIAL_STATE = { alerts: [] };\n\nconst clearReducer = () => ({ ...INITIAL_STATE });\n\nconst addAlert = (state = INITIAL_STATE, action) => ({\n  ...state,\n  alerts: state.alerts.concat([action.payload.alert]),\n});\n\nconst deleteAlert = (state = INITIAL_STATE, action) => {\n  const { alerts } = state;\n  const alertList = [];\n\n  alerts.forEach((alert) => {\n    if (alert.id !== action.payload.id) {\n      alertList.push(alert);\n    }\n  });\n\n  return ({ ...state, alerts: alertList });\n};\n\nexport const alertReducer = createReducer(INITIAL_STATE, {\n  [types.CLEAR_REDUCER]: clearReducer,\n  [types.ADD_ALERT]: addAlert,\n  [types.DELETE_ALERT]: deleteAlert,\n});\n","export const CLEAR_REDUCER = 'CLEAR_ALERT_REDUCER';\nexport const ADD_ALERT = 'ADD_ALERT';\nexport const DELETE_ALERT = 'DELETE_ALERT';\n","import * as comicListReducer from '../containers/comic-list/reducers';\nimport * as comicDetailsReducer from '../containers/comic-details/reducers';\nimport * as alertReducer from '../containers/alert/reducers';\n\nexport default ({\n  ...comicListReducer,\n  ...comicDetailsReducer,\n  ...alertReducer,\n});\n","import * as types from './actionTypes';\n\nexport function clearReducer() {\n  return { type: types.CLEAR_REDUCER };\n}\n\nexport function addAlert(title, type, timeout = 5000) {\n  return {\n    type: types.ADD_ALERT,\n    payload: {\n      alert: {\n        id: new Date().getTime(),\n        title,\n        timeout,\n        type,\n      },\n    },\n  };\n}\n\nexport function deleteAlert(id) {\n  return {\n    type: types.DELETE_ALERT,\n    payload: { id },\n  };\n}\n","import React from 'react';\nimport './styles.scss';\nimport { PropTypes } from 'prop-types';\nimport ButtonIcon from '../ButtonIcon';\nimport { getClasses } from '../../lib/utils';\n\nexport const alertTypes = {\n  error: 'error',\n  success: 'success',\n};\n\nconst Alert = ({ alert, alert: { id, timeout }, remove }) => {\n  setTimeout(() => remove(id), timeout);\n\n  return (\n    <div data-testid={alert.id} className={getClasses(['alert-component', alert.type])}>\n      <span>\n        { alert.title }\n      </span>\n\n      <ButtonIcon testid=\"close-alert\" onClick={() => remove(alert.id)} icon=\"close\" color=\"#FFF\" size=\"14px\" />\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  remove: PropTypes.func.isRequired,\n  alert: PropTypes.shape({\n    id: PropTypes.any.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    timeout: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Alert;\n","import { call, put } from 'redux-saga/effects';\nimport * as comicListActions from '../actions';\nimport * as alertActions from '../../alert/actions';\nimport { alertTypes } from '../../../components/Alert';\n\nexport function* getComicList(api, { payload }) {\n  const { search, t, page } = payload;\n  const limit = 10;\n\n  yield put(comicListActions.loading(true));\n\n  const response = yield call(api.getComicList, search, page, limit);\n\n  if (response && response.ok) {\n    const { data: { results, total } } = response.data;\n    const totalPages = Math.ceil(total / limit);\n\n    yield put(comicListActions.addComics(results, total, totalPages));\n  } else {\n    yield put(alertActions.addAlert(t('Service temporarily unavailable'), alertTypes.error));\n  }\n\n  yield put(comicListActions.loading(false));\n}\n","const ApiConstants = {\n  auth: {\n    hash: '76c29ce6db082252252dae552fba7918',\n    apikey: '0a0a36f940fe63af74de0eef2390f6f9',\n    ts: '3600000000',\n  },\n  uri: 'http://gateway.marvel.com/v1/public',\n  apis: { comics: '/comics' },\n};\n\nexport default ApiConstants;\n","import apisauce from 'apisauce';\nimport ApiConstants from './ApiConstants';\n\nconst { uri, auth, apis } = ApiConstants;\n\nconst getAuthentication = () => ({\n  ts: auth.ts,\n  apikey: auth.apikey,\n  hash: auth.hash,\n});\n\nconst removeEmptyProperties = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') removeEmptyProperties(obj[key]);\n    else if (obj[key] == null || obj[key] === '') delete obj[key];\n  });\n};\n\nconst create = (baseURL = uri) => {\n  const api = apisauce.create({\n    baseURL,\n    headers: { 'Content-Type': 'application/json' },\n    timeout: 20000,\n  });\n\n  const getComicList = (title, page, limit) => {\n    const offset = page ? (page - 1) : 0;\n    const params = {\n      ...getAuthentication(),\n      formatType: 'comic',\n      title,\n      offset,\n      limit,\n    };\n\n    removeEmptyProperties(params);\n\n    return api.get(apis.comics, params);\n  };\n\n  const getComicDetails = (id) => {\n    const params = { ...getAuthentication() };\n    return api.get(`${apis.comics}/${id}`, params);\n  };\n\n  return {\n    getComicList,\n    getComicDetails,\n  };\n};\n\nexport default { create };\n","import { takeLatest } from 'redux-saga/effects';\nimport * as types from '../actionTypes';\nimport { getComicList } from './ComicListSaga';\nimport Api from '../../../api';\n\nconst api = Api.create();\n\nexport const comicListSagas = [\n  takeLatest(types.SAGA_COMIC_LIST, getComicList, api),\n];\n","import { call, put } from 'redux-saga/effects';\nimport * as comicDetailsActions from '../actions';\nimport * as alertActions from '../../alert/actions';\nimport { alertTypes } from '../../../components/Alert';\n\nexport function* getComicDetails(api, { payload }) {\n  const { id, t } = payload;\n\n  yield put(comicDetailsActions.loading(true));\n\n  const response = yield call(api.getComicDetails, id);\n\n  if (response && response.ok) {\n    const { data: { results } } = response.data;\n    yield put(comicDetailsActions.addComic(results[0]));\n  } else {\n    yield put(alertActions.addAlert(t('Service temporarily unavailable'), alertTypes.error));\n  }\n\n  yield put(comicDetailsActions.loading(false));\n}\n","import { takeLatest } from 'redux-saga/effects';\nimport * as types from '../actionTypes';\nimport { getComicDetails } from './ComicDetailsSaga';\nimport Api from '../../../api';\n\nconst api = Api.create();\n\nexport const comicDetailsSagas = [\n  takeLatest(types.SAGA_COMIC_DETAILS, getComicDetails, api),\n];\n","import { all } from 'redux-saga/effects';\nimport { comicListSagas } from '../containers/comic-list/sagas';\nimport { comicDetailsSagas } from '../containers/comic-details/sagas';\n\nexport default function* rootSaga() {\n  yield all([\n    ...comicListSagas,\n    ...comicDetailsSagas,\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { persistStore, persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducers from './reducers';\nimport sagas from './sagas';\n\nconst config = {\n  key: 'auth',\n  storage,\n  blacklist: [],\n};\n\nconst middleware = [];\nconst sagaMiddleware = createSagaMiddleware();\n\nmiddleware.push(sagaMiddleware);\n\nconst reducers = persistCombineReducers(config, rootReducers);\nconst enhancers = [applyMiddleware(...middleware)];\nconst initialState = {};\nconst persistConfig = { enhancers };\nconst store = createStore(reducers, initialState, compose(...enhancers));\nconst persistor = persistStore(store, persistConfig);\n\nconst configureStore = () => ({ persistor, store });\n\nsagaMiddleware.run(sagas);\n\nexport default configureStore;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { translationEn } from '../../config/translations/translations';\n\n\nconst resources = { en: { translation: translationEn } };\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n  });\n\nexport default i18n;\n","export const translationEn = {\n  Marvel: 'Marvel',\n  'Search character': 'Search character',\n  'No results found matching your search': 'No results found matching your search.',\n  'Check the spelling of the word': 'Check the spelling of the word.',\n  'Page not found': 'Page not found.',\n  Description: 'Description',\n  'Service temporarily unavailable': 'Service temporarily unavailable.',\n  'Total results': 'Total results',\n};\n","import { connect } from 'react-redux';\nimport AlertView from './AlertView';\nimport { clearReducer, deleteAlert } from '../actions';\n\nconst AlertContainer = AlertView;\n\nconst mapStateToProps = (state) => ({ alerts: state.alertReducer.alerts });\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearReducer: () => dispatch(clearReducer()),\n  deleteAlert: (id) => dispatch(deleteAlert(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport Alert from '../../../components/Alert';\n\nclass AlertView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillUnmount() {\n    const { clearReducer } = this.props;\n    clearReducer();\n  }\n\n  render() {\n    const { alerts, deleteAlert } = this.props;\n\n    return (\n      <div className=\"alert-view\">\n        { alerts.map((alert) => <Alert key={alert.id} alert={alert} remove={deleteAlert} />) }\n      </div>\n    );\n  }\n}\n\nAlertView.propTypes = {\n  clearReducer: PropTypes.func.isRequired,\n  alerts: PropTypes.array.isRequired,\n  deleteAlert: PropTypes.func.isRequired,\n};\n\nexport default AlertView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Input = ({ testid, onChange, value, type, placeholder, required, disabled }) => (\n  <div data-testid=\"input-component\" className=\"input-component\">\n    <input\n      data-testid={testid}\n      type={type}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      className=\"input-field\"\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n    />\n  </div>\n);\n\nInput.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  testid: PropTypes.string,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  value: '',\n  placeholder: '',\n  required: false,\n  disabled: false,\n  testid: 'input-field',\n};\n\nexport default Input;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Input from '../Input';\nimport ButtonIcon from '../ButtonIcon';\nimport './styles.scss';\n\nconst Search = ({ onClick, value, onChangeValue, t }) => {\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onClick();\n  };\n\n  return (\n    <div data-testid=\"search-component\" className=\"search-component\">\n      <form onSubmit={onSubmit} className=\"search-form\">\n        <Input\n          testid=\"search-input\"\n          value={value}\n          onChange={(text) => onChangeValue(text)}\n          placeholder={t('Search character')}\n        />\n\n        <ButtonIcon testid=\"search-btn\" onClick={() => onClick()} icon=\"search\" size=\"18px\" />\n      </form>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n  value: PropTypes.any.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(Search);\n","const logo = require('../images/logo.svg');\n\nconst images = { logo };\n\nexport default images;\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport Search from '../Search';\nimport images from '../../config/images';\nimport { getParamUrl } from '../../lib/utils';\nimport './styles.scss';\n\nconst { logo } = images;\n\nclass HeaderView extends Component {\n  constructor(props) {\n    super(props);\n\n    const search = getParamUrl('search', props.location);\n\n    this.state = { search };\n  }\n\n  searchComic = () => {\n    const { history } = this.props;\n    const { search } = this.state;\n\n    if (search) {\n      history.push(`/?search=${search}`);\n    } else {\n      history.push('/');\n    }\n  }\n\n  render() {\n    const { search } = this.state;\n    const { t } = this.props;\n\n    return (\n      <div className=\"header-component\">\n        <div className=\"header\">\n          <div className=\"content\">\n            <Link to=\"/\" onClick={() => this.setState({ search: '' })}>\n              <img src={logo} className=\"logo\" alt={t('Marvel')} />\n            </Link>\n\n            <Search\n              value={search}\n              onClick={() => this.searchComic()}\n              onChangeValue={(value) => this.setState({ search: value })}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeaderView.propTypes = {\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(HeaderView);\n","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './styles.scss';\nimport Loader from '../components/Loader';\n\nimport AlertContainer from '../containers/alert/containers/AlertContainer';\nimport Header from '../components/Header';\n\nconst ComicList = lazy(() => import('../containers/comic-list/containers/ComicListContainer'));\nconst ComicDetails = lazy(() => import('../containers/comic-details/containers/ComicDetailsContainer'));\nconst NotFoundContainer = lazy(() => import('../containers/not-found/containers/NotFoundContainer'));\n\nconst routes = [\n  {\n    key: 'comics-list',\n    path: '/',\n    exact: true,\n    component: ComicList,\n  }, {\n    key: 'comic-details',\n    path: '/comics/:id',\n    exact: true,\n    component: ComicDetails,\n  }, {\n    key: 'not-found',\n    path: '*',\n    exact: true,\n    component: NotFoundContainer,\n  },\n];\n\nexport const Routes = () => (\n  <BrowserRouter>\n    <div className=\"routes\">\n      <AlertContainer />\n\n      <Suspense fallback={<Loader show />}>\n        <Route key=\"header\" component={Header} />\n\n        <div className=\"wrap-routes\">\n          <Switch>\n            {routes.map((route) => (\n              <Route\n                key={route.key}\n                path={route.path}\n                exact={route.exact}\n                component={route.component}\n              />\n            ))}\n          </Switch>\n        </div>\n      </Suspense>\n    </div>\n  </BrowserRouter>\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport configureStore from './store';\nimport './lib/i18n/index';\n\nimport './App.scss';\nimport { Routes } from './routes';\n\nconst { persistor, store } = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Routes />\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getClasses } from '../../lib/utils';\nimport './styles.scss';\n\nconst ButtonIcon = ({ onClick, icon, color, size, testid, className, disabled }) => {\n  const getIconStyle = () => ({ width: size, height: size, backgroundColor: color });\n\n  return (\n    <button\n      data-testid={testid}\n      type=\"button\"\n      className={getClasses(['btn-icon-component', className])}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      <i data-testid=\"icon-svg\" className={getClasses(['icon-svg', icon])} style={getIconStyle()} />\n    </button>\n  );\n};\n\nButtonIcon.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  icon: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  size: PropTypes.string.isRequired,\n  testid: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nButtonIcon.defaultProps = {\n  color: '',\n  testid: 'button-icon-component',\n  className: '',\n  disabled: false,\n};\n\nexport default ButtonIcon;\n","import * as types from './actionTypes';\n\nexport function clearReducer() {\n  return { type: types.CLEAR_REDUCER };\n}\n\nexport function loading(loadingView) {\n  return {\n    type: types.LOADING,\n    payload: { loading: loadingView },\n  };\n}\n\nexport function addComics(comics, totalResults, totalPages) {\n  return {\n    type: types.ADD_COMICS,\n    payload: { comics, totalResults, totalPages },\n  };\n}\n\nexport function sagaComicList(search, page, t) {\n  return {\n    type: types.SAGA_COMIC_LIST,\n    payload: { search, page, t },\n  };\n}\n","import * as types from './actionTypes';\n\nexport function clearReducer() {\n  return { type: types.CLEAR_REDUCER };\n}\n\nexport function loading(loadingView) {\n  return {\n    type: types.LOADING,\n    payload: { loading: loadingView },\n  };\n}\n\nexport function addComic(comic) {\n  return {\n    type: types.ADD_COMIC,\n    payload: { comic },\n  };\n}\n\nexport function sagaComicDetails(id, t) {\n  return {\n    type: types.SAGA_COMIC_DETAILS,\n    payload: { id, t },\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport { getClasses } from '../../lib/utils';\n\nconst Loader = ({ show, className }) => (show ? (\n  <div data-testid=\"loader-component\" className={getClasses(['loader-component', className])}>\n    <i className=\"icon-svg loading\" />\n  </div>\n) : null);\n\nLoader.propTypes = {\n  show: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  show: false,\n  className: '',\n};\n\nexport default Loader;\n"],"sourceRoot":""}